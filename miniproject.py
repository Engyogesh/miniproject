# -*- coding: utf-8 -*-
"""miniproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13FnBDryT_WqP6IpAI0EdXgdv3psy9zn3
"""

pip install pandas pandas-profiling

import pandas as ref


# Creating the DataFrame from the given data
data = [
    {"satisfaction_level": 0.38, "last_evaluation": 0.53, "number_project": 2, "average_montly_hours": 157, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.8, "last_evaluation": 0.86, "number_project": 5, "average_montly_hours": 262, "time_spend_company": 6, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "medium"},
    {"satisfaction_level": 0.11, "last_evaluation": 0.88, "number_project": 7, "average_montly_hours": 272, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "medium"},
    {"satisfaction_level": 0.72, "last_evaluation": 0.87, "number_project": 5, "average_montly_hours": 223, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.37, "last_evaluation": 0.52, "number_project": 2, "average_montly_hours": 159, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.41, "last_evaluation": 0.5, "number_project": 2, "average_montly_hours": 153, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.1, "last_evaluation": 0.77, "number_project": 6, "average_montly_hours": 247, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.92, "last_evaluation": 0.85, "number_project": 5, "average_montly_hours": 259, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.89, "last_evaluation": 1, "number_project": 5, "average_montly_hours": 224, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.42, "last_evaluation": 0.53, "number_project": 2, "average_montly_hours": 142, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.45, "last_evaluation": 0.54, "number_project": 2, "average_montly_hours": 135, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.11, "last_evaluation": 0.81, "number_project": 6, "average_montly_hours": 305, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.84, "last_evaluation": 0.92, "number_project": 4, "average_montly_hours": 234, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.41, "last_evaluation": 0.55, "number_project": 2, "average_montly_hours": 148, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.36, "last_evaluation": 0.56, "number_project": 2, "average_montly_hours": 137, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.38, "last_evaluation": 0.54, "number_project": 2, "average_montly_hours": 143, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.45, "last_evaluation": 0.47, "number_project": 2, "average_montly_hours": 160, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.78, "last_evaluation": 0.99, "number_project": 4, "average_montly_hours": 255, "time_spend_company": 6, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.45, "last_evaluation": 0.51, "number_project": 2, "average_montly_hours": 160, "time_spend_company": 3, "Work_accident": 1, "left": 1, "promotion_last_5years": 1, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.76, "last_evaluation": 0.89, "number_project": 5, "average_montly_hours": 262, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.11, "last_evaluation": 0.83, "number_project": 6, "average_montly_hours": 282, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.38, "last_evaluation": 0.55, "number_project": 2, "average_montly_hours": 147, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.09, "last_evaluation": 0.95, "number_project": 6, "average_montly_hours": 304, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.46, "last_evaluation": 0.57, "number_project": 2, "average_montly_hours": 139, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.4, "last_evaluation": 0.53, "number_project": 2, "average_montly_hours": 158, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.89, "last_evaluation": 0.92, "number_project": 5, "average_montly_hours": 242, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.4, "last_evaluation": 0.49, "number_project": 2, "average_montly_hours": 135, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.82, "last_evaluation": 0.87, "number_project": 4, "average_montly_hours": 239, "time_spend_company": 5, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "sales", "salary": "low"},
    {"satisfaction_level": 0.41, "last_evaluation": 0.46, "number_project": 2, "average_montly_hours": 128, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "accounting", "salary": "low"},
    {"satisfaction_level": 0.38, "last_evaluation": 0.5, "number_project": 2, "average_montly_hours": 132, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "accounting", "salary": "low"},
    {"satisfaction_level": 0.09, "last_evaluation": 0.62, "number_project": 6, "average_montly_hours": 294, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "accounting", "salary": "low"},
    {"satisfaction_level": 0.45, "last_evaluation": 0.57, "number_project": 2, "average_montly_hours": 134, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "hr", "salary": "low"},
    {"satisfaction_level": 0.4, "last_evaluation": 0.51, "number_project": 2, "average_montly_hours": 145, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "hr", "salary": "low"},
    {"satisfaction_level": 0.45, "last_evaluation": 0.55, "number_project": 2, "average_montly_hours": 140, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "hr", "salary": "low"},
    {"satisfaction_level": 0.84, "last_evaluation": 0.87, "number_project": 4, "average_montly_hours": 246, "time_spend_company": 6, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "hr", "salary": "low"},
    {"satisfaction_level": 0.1, "last_evaluation": 0.94, "number_project": 6, "average_montly_hours": 255, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "techanical", "salary": "low"},
    {"satisfaction_level": 0.38, "last_evaluation": 0.46, "number_project": 2, "average_montly_hours": 137, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "techanical", "salary": "low"},
    {"satisfaction_level": 0.45, "last_evaluation": 0.5, "number_project": 2, "average_montly_hours": 126, "time_spend_company": 3, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "techanical", "salary": "low"},
    {"satisfaction_level": 0.11, "last_evaluation": 0.89, "number_project": 6, "average_montly_hours": 30655, "time_spend_company": 4, "Work_accident": 0, "left": 1, "promotion_last_5years": 0, "sales": "techanical", "salary": "low"}
]

df = ref.DataFrame(data)
print(df)

department_counts = df.groupby("sales").size().reset_index(name="num_employees")
print(department_counts)

df_left = df[df["left"] == 1]
department_left_counts = df_left.groupby("sales").size().reset_index(name="num_employees")
department_left_counts["rank"] = department_left_counts["num_employees"].rank(ascending=False, method='dense').astype(int)
print(department_left_counts)

avg_time_hours = df.groupby(["left", "sales"]).agg(
    avg_time_spend_company=("time_spend_company", "mean"),
    avg_average_montly_hours=("average_montly_hours", "mean")
).reset_index()

avg_time_hours_sorted = avg_time_hours.sort_values(by="sales")

print(avg_time_hours_sorted)

min_max_time_hours = df.groupby(["left", "sales"]).agg(
    min_time_spend_company=("time_spend_company", "min"),
    max_time_spend_company=("time_spend_company", "max"),
    min_average_montly_hours=("average_montly_hours", "min"),
    max_average_montly_hours=("average_montly_hours", "max")
).reset_index()


min_max_time_hours_sorted = min_max_time_hours.sort_values(by="sales")


print(min_max_time_hours_sorted)

eval_satisfaction_stats = df.groupby(["left", "sales"]).agg(
    min_last_evaluation=("last_evaluation", "min"),
    max_last_evaluation=("last_evaluation", "max"),
    avg_last_evaluation=("last_evaluation", "mean"),
    min_satisfaction_level=("satisfaction_level", "min"),
    max_satisfaction_level=("satisfaction_level", "max"),
    avg_satisfaction_level=("satisfaction_level", "mean")
).reset_index()

eval_satisfaction_stats_sorted = eval_satisfaction_stats.sort_values(by="sales")

print(eval_satisfaction_stats_sorted)

accident_promotion_stats = df.groupby(["left", "sales"]).agg(
    count_work_accident=("Work_accident", "sum"),
    count_promotion_last_5years=("promotion_last_5years", "sum")
).reset_index()

accident_promotion_stats_sorted = accident_promotion_stats.sort_values(by="sales")

print(accident_promotion_stats_sorted)

merged_results = pd.merge(avg_time_hours_sorted, min_max_time_hours_sorted, on=["left", "sales"])
merged_results = pd.merge(merged_results, eval_satisfaction_stats_sorted, on=["left", "sales"])
merged_results = pd.merge(merged_results, accident_promotion_stats_sorted, on=["left", "sales"])

print(merged_results)

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
sns.barplot(x="sales", y="avg_time_spend_company", hue="left", data=merged_results)

plt.xlabel("Department (Sales)")
plt.ylabel("Average Time Spent in Company")
plt.title("Average Time Spent in Company by Department and Employee Status (Left/Not Left)")
plt.xticks(rotation=45)
plt.legend(title="Left")

plt.tight_layout()
plt.show()

import pandas as pd

# Sample data frame
data = {
    "satisfaction_level": [0.38, 0.09, 0.45, 0.40, 0.45, 0.84, 0.10, 0.38, 0.45, 0.11],
    "last_evaluation": [0.50, 0.62, 0.57, 0.51, 0.55, 0.87, 0.94, 0.46, 0.50, 0.89],
    "number_project": [2, 6, 2, 2, 2, 4, 6, 2, 2, 6],
    "average_montly_hours": [132, 294, 134, 145, 140, 246, 255, 137, 126, 306],
    "time_spend_company": [3, 4, 3, 3, 3, 6, 4, 3, 3, 4],
    "Work_accident": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    "left": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    "promotion_last_5years": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    "sales": ["accounting", "accounting", "hr", "hr", "hr", "hr", "technical", "technical", "technical", "technical"],
    "salary": ["low", "low", "low", "low", "low", "low", "low", "low", "low", "low"]
}

df = pd.DataFrame(data)

# Calculate average time_spend_company and average_montly_hours
avg_time_hours = df.groupby(['sales', 'left']).agg(
    avg_time_spend_company=('time_spend_company', 'mean'),
    avg_average_monthly_hours=('average_montly_hours', 'mean')
).reset_index()

# Pivot table for heatmap
heatmap_data = avg_time_hours.pivot(index='sales', columns='left', values=['avg_time_spend_company', 'avg_average_monthly_hours'])

print(heatmap_data)

import seaborn as sns
import matplotlib.pyplot as plt

# Set up the matplotlib figure
plt.figure(figsize=(12, 6))

# Plot heatmap for average time_spend_company
plt.subplot(1, 2, 1)
sns.heatmap(
    heatmap_data['avg_time_spend_company'],
    annot=True,
    cmap='YlGnBu',
    linewidths=0.5,
    fmt='.2f'
)
plt.title('Average Time Spent in Company')
plt.xlabel('Left Status (0 = Not Left, 1 = Left)')
plt.ylabel('Department')

# Plot heatmap for average average_montly_hours
plt.subplot(1, 2, 2)
sns.heatmap(
    heatmap_data['avg_average_monthly_hours'],
    annot=True,
    cmap='YlGnBu',
    linewidths=0.5,
    fmt='.2f'
)
plt.title('Average Monthly Hours')
plt.xlabel('Left Status (0 = Not Left, 1 = Left)')
plt.ylabel('Department')

plt.tight_layout()
plt.show()